version: '3.7'

volumes:
    app_volume:
        name: ${PROJECT_NAME}_app_volume
        driver: local
        driver_opts:
            type: nfs
            o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
            device: ":${PWD}"

services:
    clickhouse:
        container_name: ${PROJECT_NAME}_clickhouse
        image: registry.marfa-tech.net/marfatech/clickhouse-server:20.11.2.1
        restart: always
        volumes:
            - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
            - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
            - ./clickhouse/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
        environment:
            CLICKHOUSE_HOST: ${CLICKHOUSE_HOST}
            CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE}
            CLICKHOUSE_MANUAL_USER: ${CLICKHOUSE_USER}
            CLICKHOUSE_MANUAL_PASSWORD: ${CLICKHOUSE_PASSWORD}
        ports:
            - 8123:8123

    php:
        container_name: ${PROJECT_NAME}_php
        build:
            context: ./..
            dockerfile: docker/php/Dockerfile
            args:
                PHP_CS_FIXER_IGNORE_ENV: ${PHP_CS_FIXER_IGNORE_ENV}
        environment:
            - xdebug=true
        working_dir: /app
        ports:
            - 9000:9000
        volumes:
            - ~/.ssh/id_rsa:/root/.ssh/id_rsa:ro
            - app_volume:/app
        depends_on:
            - db
            - clickhouse

    nginx:
        container_name: ${PROJECT_NAME}_nginx
        build:
            context: ./..
            dockerfile: ./docker/nginx/Dockerfile
        depends_on:
            - php
        ports:
            - 80:80
        volumes:
            - app_volume:/app
        environment:
            PROJECT_NAME: ${PROJECT_NAME}
            DOMAIN: ${DOMAIN}
    db:
        container_name: ${PROJECT_NAME}_db
        image: registry.wake-app.net/wakeapp/mysql:latest
        command: ['--lower_case_table_names=2']
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 10s
            timeout: 20s
            retries: 10
        restart: always
        ports:
            - 3306:3306
        volumes:
            - ~/.docker/data/${PROJECT_NAME}/lib/mysql:/var/lib/mysql
            - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    rabbitmq:
        container_name: ${PROJECT_NAME}_rabbitmq
        image: registry.wake-app.net/${PROJECT_NAME}/rabbitmq:latest
        hostname: rabbitmq
        build:
            context: ./..
            dockerfile: docker/rabbitmq/Dockerfile
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
            interval: 30s
            timeout: 10s
            retries: 5
        ports:
            - 5672:5672
            - 15672:15672
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}

    redis:
        container_name: ${PROJECT_NAME}_redis
        image: redis:4.0.9
        ports:
            - 6379:6379
